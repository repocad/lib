import font

circle(0 0 80.26 / 2)

def diameter = 76

def scale = diameter / 100 #scale factor

def fiveSize = 7
def oneSize = 3

def textSize = 3

def innerText = 10
def textOffsetx = 0 * scale #ADJUSTMENT OF TEXT X
def textOffsety = 0.5 * scale #ADJUSTMENT OF TEXT Y


def outer = ( diameter / 2) - 1
def innerFive = ( diameter / 1.9) - fiveSize
def innerOne = ( diameter / 2) - oneSize

#TEST ICON
line(-1 * ( diameter / 3.5) 0 diameter / 3.5 0)
line(0 -1 * ( diameter / 3.5) 0 diameter / 2)

#calculate which digit to write
def setchar(vx as Number vy as Number diameter as Number ) = {
  if(i diameter < -1) {if(diameter > -3) {three(vx + 1 vy textSize)}}
  if(i diameter < 0) {if(diameter > -2) {six(vx + 1 vy textSize)}}
  if(i diameter < 1) {if(diameter > -1) {E(vx + 1 vy textSize + 2)}}
  if(i diameter < 2) {if(diameter > 0) {one(vx - (textSize / 2) vy textSize)
  two(vx + (textSize / 2) vy textSize)}}
  if(i diameter < 3) {if(diameter > 1) {one(vx - (textSize / 2) vy textSize)
  five(vx + (textSize / 2) vy textSize)}}
  if(i diameter < 4) {if(diameter > 2) {S(vx  vy - 2 textSize + 2)}}
  if(i diameter < 5) {if(diameter > 3) {two(vx - (textSize / 2) vy textSize)
  one(vx + (textSize / 2) vy textSize)}}
  if(i diameter < 6) {if(diameter > 4) {two(vx - (textSize / 2) vy textSize)
  four(vx + (textSize / 2) vy textSize)}}
  if(i diameter < 7) {if(diameter > 5) {W(vx - 1 vy textSize + 2)
  }}
  if(i diameter < 8) {if(diameter > 6) {three(vx - (textSize / 2) vy textSize)
  zero(vx + (textSize / 2) vy textSize)}}
  if(i diameter < 9) {if(diameter > 7) {three(vx - (textSize / 2) vy textSize)
  three(vx + (textSize / 2) vy textSize)}}
  if(i diameter < 10) {if(diameter > 8) {N(vx  vy textSize + 2)
  }}
}

#THIRTvy DEGREE TEXT
repeat -2 to 10 using int {
  def vx = -1 * cos(radians(int * 30))
  def vy = sin(radians(int * 30))

  #TEXT
  def textvx = (-1 - vx * ( diameter / 2) - innerText) - textOffsetX
  def textvy = (-1 - vy * ( diameter / 2) - innerText) - textOffsetY
  setchar(textvx textvy int)
}

#TEN DEGREE MARKS
repeat -6 to 30 using int {
  def vx = -1 * cos(radians(int * 10))
  def vy = sin(radians(int * 10))
  line(vx * innerFive vy * innerFive vx * outer vy * outer)
}


#FIVE DEGREEscale MARKS
repeat 0 to 90 using int {
  def vx = cos(radians(int * 5))
  def vy = sin(radians(int * 5))
  line(vx * innerOne vy * innerOne vx * outer vy * outer)
}

#OUTER AN diameterCENTER CIRCLE

circle(0 0 1)